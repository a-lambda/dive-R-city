---
title: "Last R packages published"
author: "Alcor"
date: "2025-01-18"
categories: [news, code, analysis]
image: "image.jpg"
---

## Paquets R

```{r}
#| label: load_libraries
#| code-fold: true
#| warning: false
#| 
library(purrr)
library(dplyr)
library(gt)
library(tools)
library(tibble)
library(lubridate)
library(RPostgres)


```

### Récupération des données CRAN

```{r}
#| label: CRAN_package_db
#| 
pdb <- tools::CRAN_package_db()

```

### Derniers paquets publiés la veille

  - Donnée `Published`
  
```{r}
#| label: published_field
#| code-fold: true

cran_repo <- "https://cran.r-project.org/web/packages/"

last_pkg_published <- pdb |> 
  dplyr::select(Package, Version, `Date/Publication`) |> 
  dplyr::filter(
    date(lubridate::ymd_hms(`Date/Publication`)) == (Sys.Date() - 1)
  ) |> 
  dplyr::arrange(dplyr::desc(`Date/Publication`), Package, Version) |>
  dplyr::rename(
    paquet = Package,
    version = Version,
    date_publication = `Date/Publication`
  ) |> 
  dplyr::mutate(lien = paste0(cran_repo, paquet),
         lien = glue::glue("[{paquet}]({lien})"))
         
gt_last_pkg_published <- last_pkg_published |> 
  dplyr::mutate(lien = purrr::map(lien, gt::md)) |> 
  gt::gt() |>   
  tab_header(
    title    = gt::md("**Derniers paquets publiés**"),
    subtitle  = gt::md(paste("Total =", nrow(last_pkg_published))),
  ) 

gt_last_pkg_published

```

### Sauvegarde des derniers paquets publiés

  1 .Etablissement de la connexion `postgresql`
  
```{r}
#| label: create_conn
#| code-fold: true

DB_HOSTNAME <- Sys.getenv("DB_HOSTNAME")
DB_USER <- Sys.getenv("DB_USER")
DB_PASSWORD <- Sys.getenv("DB_PASSWORD")
DB_PORT <- Sys.getenv("DB_PORT")
DB_NAME <- Sys.getenv("DB_NAME")

conn <- RPostgres::dbConnect(
  drv = RPostgres::Postgres(), 
  dbname = DB_NAME,
  host = DB_HOSTNAME,
  port = DB_PORT,
  user = DB_USER,
  password = DB_PASSWORD
)

```
  
  2. Bascule sur le schéma `dev` par défaut
  
```{r}
#| label: set_schema_default
#| code-fold: true
#| message: false

query <- paste(
  "ALTER DATABASE",
  DB_NAME,
  "SET SEARCH_PATH TO dev;"
)
RPostgres::dbSendQuery(
  conn,
  query
)

```

  3. Ajout des nouveaux paquets R à la table `paquets`

::: {.callout-note collapse="false"}

La table paquets a été créée en avance de phase avec les requête SQL :

```SQL
CREATE SCHEMA dev;

CREATE TABLE dev.paquets(
  id SERIAL PRIMARY KEY,
  paquet VARCHAR(50) NOT NULL,
  version VARCHAR(20) NOT NULL,
  date_publication TIMESTAMP NOT NULL, 
  lien VARCHAR(100),
  UNIQUE(paquet, version));
```
:::

```{r}
#| label: add_info_last_pkg_to_psql_table
#| code-fold: true
#| message: false
#| 
RPostgres::dbAppendTable(
  conn = conn, 
  name = Id(schema = 'dev', table = 'paquets'), 
  value = last_pkg_published
)

```

  4. Vérification des ajouts d'information `paquets`

```{r}
#| label: verif_data_inserted
#| code-fold: true
#| message: false

result <- RPostgres::dbGetQuery(
  conn, 
  "SELECT count(paquet) AS nb_paquets, date_publication::date
  FROM dev.paquets
  GROUP BY date_publication::date;")

print(result)

```

