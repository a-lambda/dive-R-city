---
title: "R packages database (2/?)"
author: "Alcor"
date: "2025-01-08"
categories: [news, code, analysis]
image: "image.jpg"
---

## Etude des données obtenues sur les paquets à partir de `CRAN_package_db`

```{r}
#| label: load_libraries
#| code-fold: true
#| warning: false
#| 
library(dplyr)
library(tools)
library(gt)
library(purrr)
library(ggplot2)
library(tibble)

```

::: {.callout-note collapse="false"}

Les champs conservés dans la suite de l'étude sont :

  - ceux dont les données ne présentent aucune valeur `NA`.
  - le champ `Authors@R` qui comporte des informations textes intéressantes
  
:::

```{r}
#| label: CRAN_package_db
#| 
pkgdb <- tools::CRAN_package_db()

saveRDS(object = pkgdb, file = paste0(Sys.Date(), "_pkg.RDS"))

```

### Simplification du data.frame d'étude

```{r}
#| label: pkgdb_simplified

fields <- c(
  "Package", "Version", "License", "MD5sum", "NeedsCompilation",
  "Author", "Authors@R", "Date/Publication", "Description", "Maintainer", "Packaged",
  "Title", "Published")

pkgdb <- pkgdb |> 
  dplyr::select(all_of(fields))

```

### Types de licences utilisées

```{r}
#| label: licences_used
#| code-fold: true
#| warning: false

table_licenses <- table(pkgdb$License)
tbl_licenses   <- table_licenses |> 
  as.matrix() |> 
  as_tibble() |> 
  dplyr::mutate(license = dimnames(table_licenses)[[1]]) |> 
  rename("Nom licence" = license,
          occurrences = V1,
        ) |> 
  dplyr::relocate("Nom licence")

```

  - Licences à usage unique

```{r}
#|label: orphan_licenses

tbl_orphan_licenses <- tbl_licenses |> 
    dplyr::filter(occurrences == 1) |> 
    left_join(pkgdb, join_by("Nom licence" == License)) |> 
    select(Package, "Nom licence")

gt_orphan_licenses <- gt(tbl_orphan_licenses) |> 
  tab_header(
    title    = md("**Licences orphelines**"),
    subtitle = md("(occurrence de licence égale à 1 pour un paquet donné)")
  ) 

gt_orphan_licenses

```

  - Autres licences

```{r}
#|label: other_licenses

tbl_other_licenses <- tbl_licenses |> 
  filter(occurrences > 1)

gt_other_licenses <- gt(tbl_other_licenses) |> 
  tab_header(
    title    = md("**Licences non orphelines**"),
    subtitle = md("(occurrences de licence supérieure à 1 pour un paquet donné)")
  ) 

gt_other_licenses

```

### Données du champ `Authors@R`

```{r}
#| label: authorsR

authorsR <- pkgdb$`Authors@R`

```

  1) fonction `extract_email`

```{r}
#| label: extract_email_function

extract_email <- function(text) {

  regex_email    <- "[\"]([^[ ]|[\"]]+?[@]{1}.+?)[\"]"
  
  resultat <- stringi::stri_extract_all(text, regex = regex_email) |>
    unlist() |> 
    na.omit() |> 
    gsub(pattern = "[\"]", replacement = "") |> 
    as_tibble() |> 
    rename(email = value)
  
  return(resultat)
  
}

```

  - extraction des emails
  
```{r}
#| label: extract_email

emails <- authorsR |> 
  extract_email()

```

  - Sauvegarde des emails
  
```{r}
#| label: save_emails

saveRDS(
  object = unique(emails),
  file = paste0(Sys.Date(),"_emails.RDS")
)

```

  2) fonction `extract_mail_server`
  
```{r}
#| label: extract_mail_server_function

extract_mail_server <- function(text) {

  regex_mail_server    <- "[@](.+)$"
  
  resultat <- stringi::stri_extract_all(text, regex = regex_mail_server) |>
    unlist() |> 
    na.omit() |> 
    gsub(pattern = "[@]", replacement = "") |> 
    as_tibble() |> 
    rename(`mail server` = value)
  
  return(resultat)

}

```

  - extraction des serveurs de messagerie

```{r}
#| label: extract_mail_server

mail_servers <- extract_mail_server(emails$email)

```

  3) fonction `extract_TLD`
  
```{r}
#| label: extract_TLD_function

extract_TLD <- function(text) {

  regex_TLD <- "([^[.]]+$)"
  
  resultat <- stringi::stri_extract_all(text, regex = regex_TLD) |>
    unlist() |> 
    na.omit() |> 
    gsub(pattern = "[@]", replacement = "") |> 
    as_tibble() |> 
    rename(`TLD` = value)
  
  return(resultat)

}

```

  - extraction des TLD (Top Level Domain) des serveurs de messagerie

```{r}
#| label: extract_TLD

mail_server_tlds <- extract_TLD(emails$email)

```

  - réunion des info mails dans le même tibble

```{r}
#| label: infomails_tbl

tbl_emails <- bind_cols(emails, mail_servers, mail_server_tlds)

```


```{r}
#| label: emails_count
#| echo: false

pkgdb_emails_total <- nrow(tbl_emails) 
pkgdb_emails_count <- length(unique(tbl_emails$email))
pkgdb_mail_servers_count <- length(unique(tbl_emails$`mail server`))
pkgdb_tlds_count <- length(unique(tbl_emails$TLD))

```

::: {.callout-note collapse="false"}

Sur les `r pkgdb_emails_total` recensés on dénombre :

- `r pkgdb_emails_count` emails différents, 
- `r pkgdb_mail_servers_count` serveurs de messagerie différents,
- `r pkgdb_tlds_count` TLD différents,
  
:::

  - classement par occurrences d'emails

```{r}
#| label: email_occurrences

email_occurrences <- emails |> 
  summarize(n = n(), .by = "email") |>
  arrange(desc(n), email)

gt_email_occurrences <- gt(email_occurrences |> dplyr::filter(n >= 30)) |> 
  tab_header(
    title    = md("**Email in packages db sorted by occurrences**"),
    subtitle = md(paste("**( email displayed only for n >= 30 )**"))
  ) |> 
  tab_footnote(
    footnote  = md(paste("Données valables pour le ", Sys.Date())),
    locations = cells_column_labels()
  )

gt_email_occurrences
  
```

  - graphe log log

```{r}

table_email_occurrences <- table(email_occurrences$n)
tbl_email_occurences <- table_email_occurrences |> 
  as.matrix() |> 
  as_tibble() |> 
  dplyr::mutate(n = as.numeric(dimnames(table_email_occurrences)[[1]])) |> 
  rename(frequence = V1)

ggplot(data = tbl_email_occurences) +
  geom_point(aes(x = log(n), y = log(frequence))) +
  geom_smooth(method = 'lm', aes(x = log(n), y = log(frequence))) +
  labs(
    title = "Log-log graph relatively to email occurrence frequencies",
    x = "email occurrences (log scale)",
    y = "frequency (log scale)"
  )

```

::: {.callout-important collapse="false"}

Il reste à déterminer les paramètres de la droite ...
  
:::

  - classement par occurrences de serveurs de messagerie

```{r}
#| label: mail_server_occurrences

mail_server_occurrences <- tbl_emails |> 
  summarize(n = n(), .by = `mail server`) |>
  arrange(desc(n), `mail server`)

gt_mail_server_occurrences <- gt(mail_server_occurrences |> 
                                   dplyr::filter(n >= 100)) |> 
  tab_header(
    title    = md("**Mail server in packages db sorted by occurrences**"),
    subtitle = md(paste("**( Mail server displayed only for n >= 100 )**"))
  ) |> 
  tab_footnote(
    footnote  = md(paste("Données valables pour le ", Sys.Date())),
    locations = cells_column_labels()
  )

gt_mail_server_occurrences
  
```

  - classement par occurrences de TLD

```{r}
#| label: TLD_occurrences

TLD_occurrences <- tbl_emails |> 
  summarize(n = n(), .by = "TLD") |>
  arrange(desc(n), TLD)

gt_TLD_occurrences <- gt(TLD_occurrences |> dplyr::filter(n >= 100)) |> 
  tab_header(
    title    = md("**Mail server TLDs in packages db sorted by occurrences**"),
    subtitle = md(paste("**( Mail server TLD displayed only for n >= 100 )**"))
  ) |> 
  tab_footnote(
    footnote  = md(paste("Données valables pour le ", Sys.Date())),
    locations = cells_column_labels()
    )

gt_TLD_occurrences
  
```





  