---
title: "R packages database (1/?)"
author: "Alcor"
date: "2025-01-07"
categories: [news, code, analysis]
image: "image.jpg"
---

## Paquets R

```{r}
#| label: load_libraries
#| code-fold: true
#| warning: false
#| 
library(purrr)
library(dplyr)
library(gt)
library(tools)
library(lobstr)
library(tibble)
library(rvest)
```

### Nombre de paquets R disponibles

  - utilisation de `rvest` sur le repo [/src/contrib](https://cloud.r-project.org/src/contrib/) 

```{r}
#| label: rvest_scraping

url_repo <- "https://cloud.r-project.org/src/contrib/"

links <- read_html(url_repo) |> 
  html_elements("a") |> 
  html_attr("href")

tbl_pkg_rvest <- links[grep("[.]tar[.]gz$", links)] |> 
  gsub(pattern = ".tar.gz", replacement = "") |> 
  strsplit(split = "_") |> 
  unlist() |> 
  matrix(ncol = 2, 
         byrow = TRUE, 
         dimnames = list(NULL, c("Package", "Version"))
         ) |> 
  as_tibble()

```

  - utilisation de la fonction **`available.packages`** du paquet `utils`
  
```{r}
#| label: available_packages

tbl_pkg <- utils::available.packages() |> 
  as_tibble()

```

  - Utilisation de la fonction `CRAN_package_db` du paquet **`tools`**

```{r}
#| label: CRAN_package_db
#| 
pkgdb <- tools::CRAN_package_db()

```

  - comparaisons du nombre d'informations entre les 3 bases

```{r}
#| label: db_comparisons
#| code-fold: true

tbl_summary <- tibble(
             n = c(length(unique(tbl_pkg$Package)), 
                   length(unique(pkgdb$Package)),
                   length(unique(tbl_pkg_rvest$Package))),
  fields_count = c(ncol(tbl_pkg), ncol(pkgdb), ncol(tbl_pkg_rvest)), 
        taille = c(lobstr::obj_size(tbl_pkg), 
                   lobstr::obj_size(pkgdb),
                   lobstr::obj_size(tbl_pkg_rvest)) 
)

gt_summary <- gt(tbl_summary) |> 
  tab_header(
    title    = md("**packages R disponibles**"),
    subtitle = md(paste("(en date du", Sys.Date(), ")"))
  ) |> 
  tab_footnote(
    footnote  = md("Quantité estimée avec la commande `obj_size`"),
    locations = cells_column_labels(
      columns   = taille
    )
  ) |> 
  tab_footnote(
    footnote  = md("Données issues de la commande `available.packages`"),
    locations = cells_body(
      columns = c(fields_count,n), 
      rows = 1
    )
  ) |> 
  tab_footnote(
    footnote  = md("Données issues de la commande `CRAN_package_db`"),
    locations = cells_body(
      columns = c(fields_count,n), 
      rows = 2
    )
  ) |> 
  tab_footnote(
    footnote  = md("Données issues de la commande `rvest`"),
    locations = cells_body(
      columns = c(fields_count,n), 
      rows = 3
    )
  )
  
gt_summary

```

### Paquets communs pour les 3 sources de données

```{r}
#| label: similar_pkgs
#| code-fold: true

e1 <- unique(tbl_pkg_rvest$Package)
e2 <- unique(tbl_pkg$Package)
e3 <- unique(pkgdb$Package)

similar_pkgs <- intersect(intersect(e1, e2), e3)

dissimilar_tbl_pkg_rvest <- e1[!e1 %in% similar_pkgs]
dissimilar_tbl_pkg       <- e2[!e2 %in% similar_pkgs]
dissimilar_pkgdb         <- e3[!e3 %in% similar_pkgs]

identical(dissimilar_tbl_pkg_rvest, dissimilar_pkgdb)

```


::: {.callout-note collapse="false"}

 - Nous avons `r length(similar_pkgs)` paquets en commun

 - Tous les paquets du tibble `tbl_pkg` sont présents dans le data.frame `pkgdb` et le tibble `tbl_pkg_rvest`puisque :

   - **length(dissimilar_tbl_pkg) == `r length(dissimilar_tbl_pkg)`**
   
:::

### Paquets différents

```{r}
#| label: dissimilar_pkgs
#| code-fold: true

dissimilar_pkgs <- pkgdb$Package[!pkgdb$Package %in% similar_pkgs]
dissimilar_pkgs

```

### Paquets doublons

```{r}
#| label: twin_pkgs
#| code-fold: true

pkgdb |>
  summarize(n = dplyr::n(), .by = Package) |> 
  dplyr::filter(n > 1) |> 
  dplyr::inner_join(pkgdb) |> 
  dplyr::select(c(Package, Version, Depends)) 

```

### Derniers paquets publiés

  - Donnée `Published`
  
```{r}
#|label: published_field

published <- pkgdb$Published

last_published <- published |> 
  sort(decreasing = TRUE) |> 
  head(n = 1) 

last_pkg_published <- pkgdb |> 
  select(Package, Version, Published, `Date/Publication`) |> 
  filter(Published == last_published) |> 
  select(Package, Version, `Date/Publication`) |> 
  arrange(desc(`Date/Publication`), Package, Version)

gt_last_pkg_published <- gt(last_pkg_published) |> 
  tab_header(
    title    = md("**Derniers paquets publiés**"),
  ) 

gt_last_pkg_published

```

### Informations communes et différentes

  - Champs communs
  
```{r}
#| label: similar_fields
#| code-fold: true
#| 
similar_fields <- names(tbl_pkg)[names(tbl_pkg) %in% names(pkgdb)]
similar_fields

```

  - Champs différents
  
```{r}
#| label: dissimilar_fields
#| code-fold: true
#| 
dissimilar_fields_tbl_pkg <- names(tbl_pkg)[!names(tbl_pkg) %in% names(pkgdb)]
dissimilar_fields_pkgdb <- names(pkgdb)[!names(pkgdb) %in% names(tbl_pkg)]
dissimilar_fields <- c(dissimilar_fields_tbl_pkg, dissimilar_fields_pkgdb)
dissimilar_fields

```

### Informations sur les champs

::: {.callout-note collapse="false"}

Tous les données contenues dans `tbl_pkg` et `pkgdb` sont de type **character**

On peut donc calculer la taille maximale de caractères utilisés pour les données de chaque champ.

:::

```{r}
#| label: fields_info
#| code-fold: true
#| 
get_property     <- function(tbl, f) sapply(tbl, f)

get_NA_count     <- function(x) sum(is.na(x))
get_data_count   <- function(x) sum(!is.na(x))
get_unique_count <- function(x) length(unique(x[!is.na(x)]))
get_max_nchar    <- function(x) {
  if (all(is.na(x))) return(0) else return(max(nchar(x[!is.na(x)])))
}

get_gt_summary <- function(tbl) {
  
  data_count   <- tbl |> get_property(get_data_count)
  NA_count     <- tbl |> get_property(get_NA_count)
  unique_count <- tbl |> get_property(get_unique_count)
  max_nchar    <- tbl |> get_property(get_max_nchar)
  
  resultat <- t(rbind(data_count, NA_count, unique_count, max_nchar))
  
  tbl_summary       <- as_tibble(resultat)
  tbl_summary$field <- dimnames(resultat)[[1]]
  tbl_summary       <- tbl_summary |> 
    dplyr::relocate("field")
  
  names(tbl_summary) <- c("Nom du champ", 
                          "# lignes avec données", 
                          "# lignes avec NA", 
                          "# valeurs différentes", 
                          "taille max.")
  
  gt_summary <- gt(tbl_summary) |> 
    tab_header(
      title     = md("Données relatives aux différents champs"),
      subtitle  = md(paste("Nombre de lignes = ", nrow(tbl)))
    ) |> 
    tab_footnote(
      footnote  = md("La valeur NA n'est pas comptabilisée"),
      locations = cells_column_labels(columns = "# valeurs différentes")
    ) |> 
    tab_footnote(
      footnote  = md("En nombre de caractères (0 si NA pour toutes les lignes)"),
      locations = cells_column_labels(columns = "taille max.")
    )
  
  return(gt_summary)
  
}

```

  -  de la table `tbl_pkg`

```{r}
#|label: summary_tbl_pkg

gt_summary_tbl_pkg <- get_gt_summary(tbl_pkg)
gt_summary_tbl_pkg

```

  - de la table `pgkdb`

```{r}
#|label: summary_pkgdb

gt_summary_pkgdb <- get_gt_summary(pkgdb)
gt_summary_pkgdb

```

::: {.callout-note collapse="false"}

Le data.frame `pkgdb` contient les données les plus à jour.

Ce fichier sera étudié plus précisément dans le second épisode de cette série de posts sur les paquets R.

:::
